# from keras.models import load_model
from Data_collection import Listener
from time import sleep
# from tensorflow import keras
from keras.models import load_model

model = load_model("trained_models/still_wave.h5")

li = [[-0.3, -0.3, -0.3, -0.3, -0.26, -0.26, -0.26, -0.26, -0.26, -0.26, -0.26, -0.26, -0.26, -0.26, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.22, -0.22, -0.22, -0.22, -0.22, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.3, -0.26, -0.26, -0.26, 0.23, 0.23, 0.23, 0.23, 0.16, 0.16, 0.16, 0.16, 0.16, 0.23, 0.23, 0.23, 0.23, 0.23, 0.16, 0.16, 0.16, 0.16, 0.16, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.16, 0.16, 0.16, 0.16, 0.2, 0.2, 0.2, 10.1, 10.1, 10.1, 10.1, 9.98, 9.98, 9.98, 9.98, 9.98, 9.91, 9.91, 9.91, 9.91, 9.91, 9.98, 9.98, 9.98, 9.98, 9.98, 10.02, 10.02, 10.02, 10.02, 9.98, 9.98, 9.98, 9.98, 9.98, 9.98, 9.98, 9.98, 9.98, 9.98, 9.95, 9.95, 9.95, 9.95, 9.95, 9.95, 9.95, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00154, 0.00154, 0.00154, 0.00154, 0.00154, 0.00161, 0.00161,
      0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, 0.00161, -0.00448, -0.00448, -0.00448, -0.00448, -0.00448, -0.00448, -0.00448, -0.00448, -0.00448, -0.00441, -0.00441, -0.00441, -0.00441, -0.00441, -0.00441, -0.00441, -0.00441, -0.00441, -0.00441, -0.00448, -0.00448, -0.00448, -0.00448, -0.00441, -0.00441, -0.00441, -0.00441, -0.00441, -0.00448, -0.00448, -0.00448, -0.00448, -0.00448, -0.00448, -0.00448, -0.00448, -0.00448, -0.00448, -0.00448, -0.00448, 0.00021, 0.00021, 0.00021, 0.00021, 7e-05, 7e-05, 7e-05, 7e-05, 7e-05, 0.00021, 0.00021, 0.00021, 0.00021, 0.00021, 0.00021, 0.00021, 0.00021, 0.00021, 0.00021, 0.00014, 0.00014, 0.00014, 0.00014, 0.00014, 0.00014, 0.00014, 0.00014, 0.00014, 0.00021, 0.00021, 0.00021, 0.00021, 0.00021, 0.00014, 0.00014, 0.00014, 0.00014, 0.00014, 0.00014, 0.00014]]

# model.summary()
y_new = model.predict_classes(li)
print(y_new)
